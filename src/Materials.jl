
## material functions

"""
    Material(wavelength, media)

Wavelength-dependent optical properties.

"""
struct Material{T}
    wavelengths::Vector{T}
    media::Dict{String,Function}
end



"""
alpha_wrapper(cl, mat, λ, prescription)

High-level wrapper for both types of polarisabilities

# Examples

```
λ = 633.0
media = Dict([("Au", epsilon_Au), ("medium", x -> 1.33)])
mat = Material(λ, media)

cl = cluster_chain(5, 100, 1,2,3)
n_medium = mat.media["medium"](λ)

particle_dipoles = [true, false, true, true, false]
point_dipoles = .!particle_dipoles
alpha_wrapper(cl, mat, λ, "kuwata")
```

"""
function alpha_wrapper(cl, mat, λ, prescription)

    N = length(cl.type)

    point_dipoles = cl.type .== "point"
    particle_dipoles = cl.type .== "particle"

    if (sum(point_dipoles) + sum(particle_dipoles) != N)
        @error "type must be point or particle"
    end

    n_medium = mat.media["medium"](λ)

    # point dipoles (maybe none)
    Alpha1 = map(
        (m, s) ->
            alpha_scale(alpha_embed(mat.media[m](λ), n_medium), s),
        cl.materials[point_dipoles],
        cl.sizes[point_dipoles],
    )

    # particle dipoles (maybe none)
    Epsilon = map(m -> mat.media[m](λ), cl.materials)
    Alpha2 = alpha_particles(Epsilon, cl.sizes[particle_dipoles], n_medium^2, λ; prescription=prescription)

    # combine the two
    # if one is empty, the intersection with Any should still be the actual type
    T = typeintersect(eltype(Alpha1), eltype(Alpha2))
    Alpha = Vector{T}(undef, N)

    Alpha[point_dipoles] = Alpha1
    Alpha[particle_dipoles] = Alpha2

    return Alpha
end



"""
    epsilon_Ag(λ::Real)

Drude model for the dielectric function of silver in the visible region
- `λ`: wavelength in nm

# Examples

```jldoctest
julia> round(epsilon_Ag(632.8), digits=5)
-16.11377 + 0.74871im
```

"""
function epsilon_Ag(λ)
    4 * (1.0 - 1.0 / (282.0^2 * (1 / λ^2 + 1im / (17000 * λ))))
end

"""
    epsilon_Au(λ::Real)

Extended Drude model for the dielectric function of gold in the visible region
- `λ`: wavelength in nm

# Examples

```jldoctest
julia>  round(epsilon_Au(632.8), digits=5)
-11.40185 + 1.18679im
```

"""
function epsilon_Au(λ)

    ε_∞ = 1.54
    λ_p = 177.5
    μ_p = 14500.0
    A1 = 1.27
    λ1 = 470.0
    μ_p1 = 1900.0
    A2 = 1.1
    λ2 = 325.0
    μ_p2 = 1060.0
    φ = -π / 4

    ε_∞ * (1 - 1 / (λ_p^2 * ((1 / λ)^2 + 1im / (μ_p * λ)))) +
    A1 / λ1 * (
        exp(1im * φ) / (1 / λ1 - 1 / λ - 1im / μ_p1) +
        exp(-1im * φ) / (1 / λ1 + 1 / λ + 1im / μ_p1)
    ) +
    A2 / λ2 * (
        exp(1im * φ) / (1 / λ2 - 1 / λ - 1im / μ_p2) +
        exp(-1im * φ) / (1 / λ2 + 1 / λ + 1im / μ_p2)
    )
end


using DataInterpolations

"""
epsilon_water(λ::Real; temperature::Real=20)

lambda = 400:800
eps = epsilon_water.(lambda)
eps2 = epsilon_water.(lambda; temperature=10)
series([eps, eps2])
"""
function epsilon_water(λ; temperature=20)
    # after Measurement of the refractive index of distilled water
    # from the near-infrared region to the ultraviolet region
    # Appl Opt. 2007 Jun 20;46(18):3811-20
    #   coef          19          20         21.5           24
    # 1   A1  0.56725261  0.56840276  0.568909383  0.566695982
    # 2   A2  0.17365811  0.17261774  0.171970886  0.173190010
    # 3   A3  0.02121532  0.02086190  0.020625016  0.020959519
    # 4   A4  0.11384932  0.11307487  0.112396542  0.112522841
    # 5   L1  0.00508555  0.00510183  0.005110302  0.005084152
    # 6   L2  0.01814939  0.01821154  0.018251802  0.018184885
    # 7   L3  0.02617261  0.02620722  0.026241589  0.026254395
    # 8   L4 10.73888649 10.69792721 10.675051780 10.738423520

    if temperature > 25 || temperature < 15
        @warn "$temperature is outside the range of the original data, interpolation may be wrong"
    end

    sellmeier(λ, Ai, Li) = Ai * λ^2 / (λ^2 - Li)

    tAi = SMatrix{4,4}(0.5672526103, 0.5684027565, 0.5689093832, 0.566695982,
        0.1736581125, 0.1726177391, 0.1719708856, 0.1731900098, 0.02121531502,
        0.02086189578, 0.02062501582, 0.02095951857, 0.1138493213, 0.1130748688,
        0.1123965424, 0.1125228406)
    tLi = SMatrix{4,4}(0.005085550461, 0.005101829712, 0.005110301794, 0.005084151894,
        0.01814938654, 0.01821153936, 0.01825180155, 0.01818488474, 0.02617260739,
        0.02620722293, 0.02624158904, 0.02625439472, 10.73888649, 10.69792721,
        10.67505178, 10.73842352)

    tTi = SVector(19, 20, 21.5, 24)

    Ni = 4

    ε = 1.0

    for ii = 1:Ni # summing 4 terms
        Ai = CubicSpline(tAi[:, ii], tTi)(temperature) # note the weird order (y,x)
        Li = CubicSpline(tLi[:, ii], tTi)(temperature)
        ε += sellmeier(λ * 1e-3, Ai, Li) # coeffs assume microns
    end

    return ε

end


"""
epsilon_Si(λ::Real)

lambda = 400:800
eps = epsilon_Si.(lambda)
series([real.(eps), imag.(eps)])
"""
function epsilon_Si(λ)
    #Dielectric function of silicon in the UV-vis-nearIR region from tabulated
    # values in palik's handbook 

    if λ > 2000.0 || λ < 207.0
        @warn "$λ is outside the range of the original data, interpolation may be wrong"
    end

    tL = SVector(206.6, 207.3, 208.0, 208.7, 209.4, 210.1, 210.9,
        211.6, 212.3, 213.0, 213.8, 214.5, 215.3, 216.0,
        216.8, 217.5, 218.3, 219.1, 219.8, 220.6, 221.4,
        222.2, 223.0, 223.8, 224.6, 225.4, 226.3, 227.1,
        227.9, 228.8, 229.6, 230.5, 231.3, 232.2, 233.1,
        233.9, 234.8, 235.7, 236.6, 237.5, 238.4, 239.4,
        240.3, 241.2, 242.2, 243.1, 244.1, 245.0, 246.0,
        247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0,
        254.1, 255.1, 256.2, 257.2, 258.3, 259.4, 260.5,
        261.6, 262.7, 263.8, 264.9, 266.1, 267.2, 268.4,
        269.5, 270.7, 271.9, 273.1, 274.3, 275.5, 276.8,
        278.0, 279.2, 280.5, 281.8, 283.1, 284.4, 285.7,
        287.0, 288.3, 289.7, 291.0, 292.4, 293.8, 295.2,
        296.6, 298.0, 299.5, 300.9, 302.4, 303.9, 305.4,
        306.9, 308.4, 310.0, 311.5, 313.1, 314.7, 316.3,
        317.9, 319.5, 321.2, 322.9, 324.6, 326.3, 328.0,
        329.7, 331.5, 333.3, 335.1, 336.9, 338.8, 340.6,
        342.5, 344.4, 346.3, 348.3, 350.2, 352.2, 354.2,
        356.3, 358.3, 360.4, 362.5, 364.7, 366.8, 369.0,
        371.2, 373.4, 375.7, 378.0, 380.3, 382.7, 385.0,
        387.5, 389.9, 392.4, 394.9, 397.4, 400.0, 402.5,
        405.2, 407.8, 410.5, 413.3, 416.1, 418.9, 421.7,
        424.6, 427.5, 430.5, 433.5, 436.6, 439.7, 442.8,
        446.0, 449.2, 452.5, 455.8, 459.2, 462.6, 466.1,
        469.6, 473.2, 476.9, 480.6, 484.3, 488.1, 492.0,
        495.9, 499.9, 504.0, 508.1, 512.3, 516.6, 520.9,
        525.4, 529.9, 534.4, 539.1, 543.8, 548.6, 553.5,
        558.5, 563.6, 568.7, 574.0, 579.4, 584.8, 590.4,
        596.1, 601.9, 607.8, 613.8, 619.9, 626.2, 632.6,
        639.1, 645.8, 652.6, 659.5, 666.6, 673.8, 681.2,
        688.8, 696.5, 704.5, 712.6, 720.8, 729.3, 738.0,
        746.9, 756.0, 765.3, 774.9, 784.7, 794.8, 805.1,
        815.7, 826.6, 1120.0, 1144.0, 1200.0, 1372.0, 1400.0,
        1532.0, 1600.0, 1696.0, 1800.0, 2000.0)


    tεᵣ = SVector(-7.44218, -7.49989, -7.57302, -7.48961, -7.63447, -7.71944, -7.73843,
        -7.81562, -7.86034, -7.89846, -7.98834, -8.0724, -8.1093, -8.1685,
        -8.24178, -8.29214, -8.4002, -8.45598, -8.54928, -8.65087, -8.72343,
        -8.81976, -8.89162, -8.98589, -9.05146, -9.1076, -9.16072, -9.18623,
        -9.21744, -9.19486, -9.16612, -9.08742, -9.01475, -8.92019, -8.82381,
        -8.74937, -8.68349, -8.65424, -8.65105, -8.66794, -8.7244, -8.79437,
        -8.89465, -8.99208, -9.14014, -9.29, -9.4445, -9.62777, -9.81939,
        -10.0203, -10.2443, -10.465, -10.695, -10.9598, -11.2254, -11.5046,
        -11.7709, -12.0893, -12.4008, -12.7297, -13.0835, -13.45, -13.8489,
        -14.2798, -14.7154, -15.1896, -15.7041, -16.2369, -16.7922, -17.3548,
        -17.9315, -18.4562, -18.9332, -19.3437, -19.6392, -19.8193, -19.8867,
        -19.8124, -19.6102, -19.2877, -18.8239, -18.2164, -17.4503, -16.3333,
        -14.7679, -12.4106, -9.45548, -6.12934, -2.93152, -0.067319, 2.37222,
        4.34308, 5.9783, 7.31638, 8.42475, 9.36796, 10.1172, 10.7756,
        11.3419, 11.8277, 12.2335, 12.6362, 13.0106, 13.332, 13.6551,
        13.9645, 14.2543, 14.5652, 14.891, 15.2122, 15.5291, 15.8485,
        16.1746, 16.5346, 16.8777, 17.233, 17.5865, 17.9552, 18.3213,
        18.7081, 19.1254, 19.5746, 20.0724, 20.6812, 21.4212, 22.3879,
        23.7106, 25.6007, 28.1836, 31.4907, 35.2195, 38.7911, 41.4811,
        43.1383, 43.7395, 43.2656, 42.1301, 40.7353, 39.2276, 37.7444,
        36.3509, 35.064, 33.8739, 32.7856, 31.7947, 30.8751, 30.047,
        29.2682, 28.5138, 27.836, 27.1969, 26.6019, 26.0423, 25.5314,
        25.0456, 24.5703, 24.1294, 23.7022, 23.3043, 22.9248, 22.5644,
        22.2373, 21.8989, 21.5862, 21.2811, 20.987, 20.7126, 20.4305,
        20.1906, 19.9308, 19.7233, 19.4922, 19.274, 19.0644, 18.8557,
        18.6571, 18.4675, 18.2884, 18.0998, 17.9316, 17.7626, 17.6033,
        17.4445, 17.2954, 17.1376, 16.9968, 16.8573, 16.718, 16.5883,
        16.4578, 16.3367, 16.2075, 16.0952, 15.9753, 15.8634, 15.7521,
        15.6492, 15.5466, 15.4521, 15.3501, 15.2564, 15.155, 15.0696,
        14.9766, 14.8839, 14.7992, 14.7223, 14.6381, 14.554, 14.4779,
        14.4094, 14.3412, 14.2731, 14.1977, 14.145, 14.0774, 14.0249,
        13.9576, 13.8979, 13.8458, 13.7937, 13.727, 13.6678, 13.6013,
        13.5497, 13.4909, 12.504, 12.4574, 12.3855, 12.2549, 12.1634,
        12.0993, 12.0478, 12.0021, 11.9564, 11.8956)

    tεᵢ = SVector(5.87618, 6.06682, 6.15885, 6.26168, 6.34082, 6.45901, 6.49971,
        6.62302, 6.68727, 6.76995, 6.89997, 6.97296, 7.09863, 7.18421,
        7.2897, 7.34432, 7.49265, 7.6293, 7.74504, 7.8793, 7.99576,
        8.16684, 8.3072, 8.48767, 8.66583, 8.84936, 9.04096, 9.26185,
        9.4872, 9.70751, 9.90277, 10.1175, 10.2791, 10.4149, 10.5173,
        10.5888, 10.6068, 10.6339, 10.6406, 10.6568, 10.659, 10.6674,
        10.6817, 10.7025, 10.7216, 10.7739, 10.8361, 10.9108, 10.9885,
        11.0866, 11.1941, 11.3337, 11.4771, 11.6266, 11.802, 11.9743,
        12.1854, 12.4101, 12.641, 12.9074, 13.1944, 13.4877, 13.8338,
        14.2145, 14.629, 15.0928, 15.6078, 16.208, 16.8885, 17.6899,
        18.5997, 19.6182, 20.7537, 22.0406, 23.4415, 24.912, 26.4813,
        28.1124, 29.7862, 31.5482, 33.3466, 35.2671, 37.2916, 39.5016,
        41.8694, 44.0879, 45.7794, 46.6799, 46.7569, 46.2433, 45.3509,
        44.2714, 43.1506, 42.0316, 40.9581, 39.9492, 39.0132, 38.1319,
        37.3339, 36.6095, 35.9417, 35.3535, 34.8395, 34.3517, 33.9413,
        33.5671, 33.239, 32.9399, 32.6794, 32.4439, 32.2337, 32.0383,
        31.8743, 31.7437, 31.6152, 31.5341, 31.478, 31.4426, 31.4592,
        31.5134, 31.6383, 31.8346, 32.1257, 32.5323, 33.079, 33.8171,
        34.6961, 35.6351, 36.3148, 36.3467, 35.284, 32.8858, 29.481,
        25.5405, 21.444, 17.7252, 14.6187, 12.1943, 10.2951, 8.83218,
        7.63812, 6.67366, 5.90042, 5.23853, 4.70413, 4.31118, 3.90003,
        3.56636, 3.34847, 3.07529, 2.80944, 2.63364, 2.49319, 2.30645,
        2.1138, 2.01417, 1.90741, 1.80264, 1.78747, 1.62894, 1.54948,
        1.40596, 1.39524, 1.23637, 1.20913, 1.19158, 1.19289, 1.2119,
        1.0788, 1.07184, 0.79956, 0.830208, 0.728906, 0.689986, 0.668822,
        0.63072, 0.627508, 0.564564, 0.61272, 0.5082, 0.5058, 0.469952,
        0.442762, 0.357674, 0.3726, 0.395808, 0.361328, 0.359832, 0.260672,
        0.308332, 0.258688, 0.273768, 0.24072, 0.215838, 0.23898, 0.23814,
        0.213624, 0.19715, 0.19655, 0.188064, 0.171864, 0.171292, 0.147516,
        0.13932, 0.131172, 0.123104, 0.122784, 0.11478, 0.10682, 0.09893,
        0.098696, 0.098462, 0.090672, 0.082896, 0.082742, 0.07504, 0.0749,
        0.067248, 0.067104, 0.059536, 0.059424, 0.05187, 0.051758, 0.044256,
        0.044172, 0.03673, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)

    εᵣ = CubicSpline(tεᵣ, tL)(λ) # note the weird order (y,x)
    εᵢ = CubicSpline(tεᵢ, tL)(λ)

    return εᵣ + 1im * εᵢ

end



"""
    lorentzian(λ::Real, α_k::Real, λ_k::Real, µ_k::Real)

Complex Lorentz function, to describe polarisabilities
- `λ`: wavelength in nm
- `α_k`: oscillator strength in S.I. units
- `λ_k`: oscillator wavelength in nm
- `µ_k`: damping in S.I. units

# Examples

```jldoctest
julia> round(lorentzian(632.8)*1e39, digits=5)
6.58095 + 1.35961im
```

"""
function lorentzian(λ, α_k=5.76e-38, λ_k=526.0, µ_k=1.0e4)
    -α_k * λ_k / µ_k *
    (1.0 - 1.0 / (1.0 - (λ_k / λ)^2 - 1im * (λ_k^2 / (µ_k * λ))))
end

"""
    alpha_lorentzmolecule(λ::T, α_∞::T, α_k::Array{T}, λ_k::Array{T}, µ_k::Array{T}) where T <: Real

Complex scalar polarisability, as sum of lorentz oscillators
- `λ`: wavelength in nm
- `α_k`: oscillator strength(s) in S.I. units
- `λ_k`: oscillator wavelength(s) in nm
- `µ_k`: damping(s) in S.I. units

Default values mimic the main resonance of Rhodamine 700

# Examples


```jldoctest
julia> round(alpha_lorentzmolecule(632.8), digits=5)
0.14543 + 0.01222im
```

"""
function alpha_lorentzmolecule(λ; α_∞=9.6e-39, α_k=5.76e-38, λ_k=526.0, µ_k=1.0e4)

    ε₀ = 8.8541878128e-12
    nm3 = 1e27

    α = α_∞
    for kk = eachindex(α_k)
        α += lorentzian(λ, α_k[kk], λ_k[kk], µ_k[kk])
    end
    prefact = nm3 / (4π * ε₀)
    prefact * α
end


"""
alpha_rh6g(λ::Real)

bare polarisability of dye Rhodamine 6G retrieved from extinction measurements

lambda = 400:800
a1 = alpha_rh6g.(lambda)

# α_∞=9.6e-39, α_k=5.76e-38, λ_k=526.0, µ_k=1.0e4
a2 = alpha_lorentzmolecule.(lambda)
a3 = alpha_lorentzmolecule.(lambda; α_k=[5.76e-38, 1.552e-38], λ_k=[526, 496], µ_k=[10000, 6000])

series([real.(a1), real.(a2), real.(a3), imag.(a1), imag.(a2), imag.(a3)])

"""
function alpha_rh6g(λ)
    # bare polarisability of dye Rhodamine 6G retrieved from extinction measurements

    if λ > 1000 || λ < 300
        @warn "$λ is outside the range of the original data, interpolation may be wrong"
    end

    tλ = 300:1000
    tαᵣ =
        1e-39 .* [2.01569496955734, 2.01883044819135, 2.01204442712234, 1.99155553503325,
            1.96121246488126, 1.92440461887788, 1.88103760235817, 1.82959159887903,
            1.77268663423252, 1.71227915567085, 1.65021023943261, 1.58842527467745,
            1.52580468445026, 1.46325935750558, 1.40227008843946, 1.34223325678815,
            1.28251504666499, 1.22439976934573, 1.16488196822143, 1.10718342648309,
            1.05231338318602, 0.997021942352543, 0.944895791174452, 0.896020690432568,
            0.850674063238535, 0.8101610354041, 0.773892307162704, 0.743300285508289,
            0.718116536776524, 0.698863589967094, 0.682015146602329, 0.665077612184297,
            0.650028818837295, 0.632550744987737, 0.611255026514861, 0.589085531014678,
            0.567638877561977, 0.54634828038589, 0.528732484776308, 0.516864694627542,
            0.513482663909782, 0.523717121767524, 0.549086821369685, 0.591632057155136,
            0.651980154827677, 0.729411155312122, 0.819966559464098, 0.919225542808486,
            1.01898502524957, 1.10919631472964, 1.18781841697796, 1.25629884435372,
            1.31003604897685, 1.3456703977341, 1.36440706758277, 1.36948363843467,
            1.36338447202965, 1.34741183371015, 1.32618772808187, 1.29872349042079,
            1.26680556284564, 1.23225505043465, 1.19052211978041, 1.14340281410718,
            1.09588427037009, 1.05217412432355, 1.008034410741, 0.96165109576455,
            0.912675627796457, 0.864736837520019, 0.82074836227498, 0.777984936936866,
            0.736804809329383, 0.694600804936365, 0.653799412600541, 0.616978392542543,
            0.580530886846759, 0.543994802315959, 0.511368415610372, 0.478686239845518,
            0.44494441268484, 0.41451511317511, 0.389587463154741, 0.364544897192556,
            0.335088910017354, 0.308694228918536, 0.285303108649311, 0.260338262718218,
            0.235026932935551, 0.212880716734034, 0.194660250146172, 0.174190131482207,
            0.148557359019796, 0.123329429983724, 0.100106578347949, 0.0750818768617321,
            0.0492422356419851, 0.0249365276266408, 0.000298353961021201,
            -0.0289255145023411, -0.0592875436870462, -0.0886730276248035,
            -0.119364370333264, -0.150785436351943, -0.182586358237201, -0.214282393902339,
            -0.245930272913099, -0.27783206716527, -0.311128373804049, -0.345931733223316,
            -0.38198780477612, -0.418620436199032, -0.455069213539589, -0.491837455269508,
            -0.530537721833512, -0.571105960013169, -0.614310438722188, -0.658784878135494,
            -0.70118088939495, -0.74456566467659, -0.792939615758578, -0.840218362173519,
            -0.888838310888891, -0.940830416332558, -0.99298684712987, -1.04731463596243,
            -1.10204495469309, -1.15770968340353, -1.21555040652716, -1.27503637018901,
            -1.3354149878061, -1.39959095370008, -1.4676000022646, -1.53377772506422,
            -1.59562613032252, -1.66325541725519, -1.73503992776051, -1.80469202220342,
            -1.87848684778895, -1.95275789261051, -2.02928300785111, -2.10434462471424,
            -2.18038742116925, -2.26150056870528, -2.33989915086699, -2.41994139417778,
            -2.50160591828478, -2.58345035705524, -2.66527642807133, -2.74710547852395,
            -2.82789937897902, -2.9094941155615, -2.99602983659007, -3.08269377671884,
            -3.16695652393671, -3.24929556618902, -3.33666578913607, -3.42476914456838,
            -3.5104179432571, -3.60358558549141, -3.70191908931165, -3.79908620565817,
            -3.89746608314136, -3.99933047219681, -4.10341337876677, -4.21234193703588,
            -4.32643246661827, -4.44483068932618, -4.56931817694985, -4.69609006711055,
            -4.82436825868174, -4.95107685633001, -5.07165285469135, -5.18919345384267,
            -5.307784346256, -5.42847881042398, -5.53908809915413, -5.64013809842616,
            -5.73238992251527, -5.81389230839071, -5.88467848000785, -5.93665835459799,
            -5.9756669598587, -6.00024514138559, -6.01978395956525, -5.99002962969933,
            -5.91829886973396, -5.89683148096828, -5.87889121630302, -5.81628096279696,
            -5.73962071168839, -5.66382865673955, -5.58256861877672, -5.4955279033203,
            -5.42120399732801, -5.35411674901235, -5.29169485816073, -5.24620992965338,
            -5.21499154123443, -5.19759024274009, -5.20216766464453, -5.21987117252553,
            -5.24708031593623, -5.2878770898984, -5.33428445642027, -5.39424478519348,
            -5.45565693308488, -5.49756325092223, -5.51448654398247, -5.50914942007908,
            -5.48129800779273, -5.41359365254541, -5.29478647836498, -5.11710341645722,
            -4.8668606971975, -4.54367358930671, -4.15251090619264, -3.67717683020914,
            -3.10043442315942, -2.43385404604449, -1.68564828288693, -0.840643820220285,
            0.101370554496894, 1.11570736496483, 2.19720473459535, 3.35069556513308,
            4.53366340589454, 5.73804973556997, 6.96531323944343, 8.18290637659554,
            9.37549269394828, 10.5106284319968, 11.566694629336, 12.5376139520776,
            13.4108746676476, 14.1804413507931, 14.840816119092, 15.3800638440732,
            15.8025617511839, 16.1042992121994, 16.2932925966607, 16.3872804574515,
            16.3890484378336, 16.3040563775697, 16.1462179139283, 15.9328042782564,
            15.6711132337292, 15.3618370785878, 15.0218647685485, 14.6651972514919,
            14.2959360707939, 13.9198665539858, 13.5381183377078, 13.1583099045901,
            12.7859205958548, 12.4202188989677, 12.0674694637496, 11.7272345277441,
            11.3985941414842, 11.0858937885845, 10.789482478601, 10.5063548625869,
            10.2382229024557, 9.98345393236201, 9.74212455259633, 9.51551120796396,
            9.30191799994336, 9.09914646869591, 8.90610879740359, 8.72240173970315,
            8.54957104824478, 8.38622263899263, 8.2305145144745, 8.0840345625852,
            7.94448880697135, 7.81183387745078, 7.68414638815239, 7.56384825625902,
            7.4501766277687, 7.33839092936355, 7.23199837437425, 7.13267576682795,
            7.03592427104165, 6.94072806249475, 6.85242981807731, 6.76949843087319,
            6.68602955441089, 6.60621950575139, 6.53288330405497, 6.45807253905575,
            6.38537614402408, 6.31857794271046, 6.251538388011, 6.186632852702,
            6.12397255318894, 6.06450356289964, 6.0065464181883, 5.94833292426092,
            5.89318300027798, 5.83990907510326, 5.78794582285655, 5.73849512631768,
            5.6912316903709, 5.64375475591407, 5.59558558618032, 5.54848159396101,
            5.50461510950102, 5.46305384530034, 5.4213242779297, 5.37916639916606,
            5.33877921312051, 5.30096164819213, 5.26421881354009, 5.22782026834349,
            5.19130246298594, 5.15403332644103, 5.11919081753215, 5.08642845211849,
            5.05443812086464, 5.02483881559428, 4.99667643883744, 4.96538762342916,
            4.93281569045302, 4.90198189101456, 4.87096368100948, 4.84255337090207,
            4.81691481307261, 4.79057872882502, 4.76358105055226, 4.73644847402777,
            4.71230110912593, 4.68790899058584, 4.66280403695501, 4.63960943243235,
            4.61620085452323, 4.59241564432085, 4.56871966206766, 4.54682905282388,
            4.52515646816047, 4.50345262526226, 4.48083167920014, 4.45913356291511,
            4.44041122992781, 4.42030469518602, 4.39961928331395, 4.3811362595968,
            4.36300934379147, 4.34344188058343, 4.32540610080779, 4.30840426143521,
            4.29229014833962, 4.27680891526736, 4.25863972521234, 4.24080789356418,
            4.22094822899875, 4.20410478331653, 4.19689407646249, 4.17457143182154,
            4.15050141213898, 4.13701443862031, 4.12032999863996, 4.10691771112557,
            4.09354211352142, 4.07906542666297, 4.06609441581574, 4.05225504502202,
            4.0359612015014, 4.02121612848278, 4.00874695602765, 3.99523342742079,
            3.98118990363246, 3.9689554814773, 3.95560466391217, 3.94195195432267,
            3.93045295160166, 3.91936043983449, 3.90796950209107, 3.89686887452315,
            3.88498044471184, 3.873049870119, 3.86115817624613, 3.84793614608922,
            3.8351411649893, 3.8249202602575, 3.81428474059498, 3.80225393683397,
            3.79215475305722, 3.7827721567687, 3.77209566710153, 3.76081715053977,
            3.75009506887784, 3.74061514201518, 3.73007360395247, 3.72084098356315,
            3.7121648141758, 3.70202278160118, 3.69126400555542, 3.68031135851943,
            3.67033574489719, 3.66281988016608, 3.65349082008104, 3.64325048668239,
            3.63497755633421, 3.62775756573947, 3.62091485434746, 3.6108677047292,
            3.60126824112862, 3.59121594858113, 3.5835654708615, 3.57604969483529,
            3.5671441100567, 3.55898774904649, 3.55076407637093, 3.54374363734492,
            3.53536541446697, 3.52920867201154, 3.52286358160121, 3.5140517274988,
            3.5071895643196, 3.49918584149896, 3.49050598940585, 3.48361073508847,
            3.47619955075712, 3.46882772610323, 3.4615581194985, 3.45432494394472,
            3.44858723107493, 3.44139282657878, 3.43258613727596, 3.42653183864318,
            3.42090821990064, 3.4141225731707, 3.40706829315316, 3.39969005596072,
            3.39278782284676, 3.38683923126364, 3.38040568392427, 3.37422682070566,
            3.36845476171928, 3.36227415061048, 3.35535236780312, 3.34877023424734,
            3.3436585028372, 3.33863309645441, 3.33347546759768, 3.32704075771441,
            3.32096640023407, 3.3148165570643, 3.30810663961638, 3.30264059736926,
            3.29831200824172, 3.29206314753446, 3.28518060799485, 3.2804014820868,
            3.2757100472528, 3.27074000307747, 3.26702480126916, 3.26141635017561,
            3.25393616757373, 3.24972100330081, 3.24584630126064, 3.24126341722025,
            3.23517801961833, 3.2294319503609, 3.22467259167027, 3.2207505682716,
            3.21746982999384, 3.21271989625121, 3.20876433715862, 3.20169012567578,
            3.19590066959643, 3.19327548228854, 3.18980003972488, 3.18478703064033,
            3.17832800121817, 3.1749802227836, 3.17272976203868, 3.16785371204297,
            3.1632471260816, 3.15817200817462, 3.1534030749937, 3.14903927726503,
            3.1456026693646, 3.14164108550871, 3.13644440094123, 3.13512449745662,
            3.13224852865483, 3.12684136699214, 3.12232734428838, 3.11736753575162,
            3.11146285895345, 3.10902341825724, 3.10828397159572, 3.10467554625925,
            3.10025196764309, 3.09456439005081, 3.09108609939954, 3.08920059979338,
            3.08653217490743, 3.08441582950991, 3.07830210469119, 3.07105429411719,
            3.06857016142374, 3.06785013105452, 3.0670564613378, 3.0641043813866,
            3.05852477988212, 3.05235970677471, 3.05092222833517, 3.04977897803975,
            3.04564849743726, 3.04276418203149, 3.03940589691857, 3.03590965756695,
            3.03342726247306, 3.02999973720559, 3.02514427726853, 3.02172661545762,
            3.0195866170745, 3.0188784714242, 3.01592940328222, 3.01288843884134,
            3.00976057845408, 3.00431303172655, 3.00143848528668, 2.99984534547651,
            2.99812392515774, 2.99570514332618, 2.99188582486023, 2.98728515453655,
            2.98286698766232, 2.98225648465138, 2.9824329844184, 2.98070693048707,
            2.97493049867401, 2.97144656070147, 2.96987255826838, 2.96547487934694,
            2.96139108090938, 2.95898891009297, 2.95913019240062, 2.95676670926123,
            2.95341426672943, 2.94983153862917, 2.94690001619024, 2.94283461563031,
            2.9432404441962, 2.94476465633575, 2.93820635935857, 2.93379834495256,
            2.93246013560233, 2.93012570158058, 2.92723655678974, 2.92276048349141,
            2.91999682236947, 2.92065765017466, 2.91711538502586, 2.91433975967896,
            2.91460408389736, 2.91269434589839, 2.91147344021336, 2.90915997347321,
            2.90646671377412, 2.90124848128781, 2.90028927816574, 2.89938409212073,
            2.89637983158278, 2.89543026412125, 2.89161894874431, 2.89143919069421,
            2.88860516641159, 2.88549204907405, 2.88524098259058, 2.8833426965981,
            2.88267941216423, 2.88001704625, 2.87654931784784, 2.87717311194761,
            2.87568498286391, 2.87228199732828, 2.87093445218004, 2.87169348936004,
            2.87014166158954, 2.86517632669419, 2.86438711472849, 2.86101597494363,
            2.85926055213458, 2.86092235470749, 2.85772191702935, 2.85317488046421,
            2.85346023228089, 2.85465070825422, 2.85482424207223, 2.85496479665743,
            2.85417224515684, 2.85189719526737, 2.85075295220509, 2.84963935919207,
            2.84436747414035, 2.84207118581994, 2.84409107254742, 2.84491663515912,
            2.84215222484913, 2.83914421262845, 2.83845646531027, 2.83963881518145,
            2.84125052204102, 2.83924369657535, 2.83854578899254, 2.83483585599093,
            2.83195037907082, 2.83524187336147, 2.83282347095678, 2.83079265486081,
            2.83233572196025, 2.83331414949853, 2.83159383575443, 2.82947450110117,
            2.82948460081138, 2.8287173902842, 2.82682415129741, 2.82945896666108,
            2.8290261354752, 2.82809561959329, 2.82529185108988, 2.82397301042,
            2.82938162119985, 2.83154327259522, 2.82993888411317, 2.82781980562838,
            2.82607857224695, 2.82167234750952, 2.82083018014139, 2.82161492866924,
            2.81975708328961, 2.81871028826562, 2.81946386106884, 2.82186551551406,
            2.82389933462098, 2.82088309253833, 2.82157038676055, 2.81884121324507,
            2.81560608963901, 2.81519047112133, 2.8143222283299, 2.8180857914911,
            2.81985242403281, 2.81677971899158, 2.81219282014092, 2.80706441337936,
            2.80644256579724, 2.80925485154294, 2.8120199047086, 2.81109361956361,
            2.80801918484188, 2.79900541036264, 2.79986307620368, 2.78963479258849,
            2.79256224924357, 2.79142068454901, 2.77578083972094, 2.77209244124836,
            2.76933415697226, 2.76240295737455, 2.75678354195124, 2.7512162391391,
            2.7502889498735, 2.74467127844915, 2.72626292748032, 2.72876018863188,
            2.72777557693361, 2.73383274676907, 2.73301805575635, 2.72979947361704,
            2.72675415027646, 2.71331211182926, 2.70815462013149, 2.71129765369458,
            2.71341484091959, 2.71344722643897, 2.70987695808138, 2.70500685273369,
            2.69924024570819, 2.69990637154832, 2.70471003698616, 2.70727618443077,
            2.70549932838001, 2.68423683537401, 2.68761753772658, 2.70327985096215,
            2.71002057909013, 2.7404911555606, 2.72334022825434, 2.7106273685708,
            2.71595733487825, 2.72174719952193, 2.74508277915954, 2.7656872892782,
            2.77673455506077, 2.75927406433338, 2.85216279644455]

    tαᵢ =
        1e-39 .* [1.4119847229774, 1.32492690045518, 1.2334576555742, 1.14426539832613,
            1.06253279733202, 0.985739245825651, 0.913234723770756, 0.845265336315366,
            0.787933479372734, 0.736343671282112, 0.695420993965875, 0.659233832945665,
            0.629283761059264, 0.605346529926372, 0.587512360550255, 0.57227463414058,
            0.562245459432855, 0.556114575805979, 0.551298278889505, 0.557267180398465,
            0.562098072584972, 0.573067579196541, 0.590107442204207, 0.609868583912655,
            0.634843667605923, 0.662549226787685, 0.692369494891325, 0.725398972177256,
            0.756922015357284, 0.78953835874186, 0.814224768258738, 0.840798311733388,
            0.864588037996169, 0.885051235216255, 0.908481421423253, 0.937126558193739,
            0.970038666984684, 1.00778477647147, 1.05566898150967, 1.10807053779804,
            1.17098352764066, 1.23853553050991, 1.3083522167275, 1.37648965686781,
            1.437905716041, 1.48700918975507, 1.51732323481098, 1.52684891647071,
            1.50868210867748, 1.4686476471142, 1.41512201497123, 1.34959660160812,
            1.26907681516118, 1.18377620816233, 1.09661296595372, 1.01430606733035,
            0.934197835660096, 0.860938432495487, 0.794440892824898, 0.729302948928118,
            0.673333655800941, 0.617983113222997, 0.565514027805909, 0.522511340337435,
            0.488251574716098, 0.460634621207831, 0.429258891016733, 0.405331772704674,
            0.381075608729502, 0.370089199039425, 0.356959239531612, 0.34884393845535,
            0.339662976382413, 0.332874970406864, 0.330889848769566, 0.330760681008772,
            0.327522114445211, 0.32917989810052, 0.332158749571474, 0.331077680655583,
            0.33474270589925, 0.341069736242213, 0.347705772883814, 0.345750616921755,
            0.346593335570938, 0.353282657200794, 0.354757031070807, 0.35563255639608,
            0.358170706752136, 0.363127707249789, 0.364155654691408, 0.358001132200986,
            0.352984756424783, 0.352931214812496, 0.350158836702477, 0.345409964730894,
            0.342998632403118, 0.34012017026358, 0.333799180769475, 0.324940300050027,
            0.322734865209176, 0.317572373236514, 0.313746433756273, 0.309610076006282,
            0.307038322770179, 0.304071287743555, 0.301536607945187, 0.297636724173186,
            0.293132698079191, 0.28879324165025, 0.285057469548611, 0.282350618409215,
            0.279965750916989, 0.276352842594404, 0.271493685897503, 0.267576455167537,
            0.262896156070641, 0.262642852413871, 0.263054721400814, 0.259325907815473,
            0.255641111386587, 0.259374046870612, 0.254519425486623, 0.257197841959037,
            0.257413694889021, 0.260370894590161, 0.264325479520548, 0.268419570442487,
            0.272539698212697, 0.278968603672307, 0.285673892679115, 0.291400239836393,
            0.302623707451986, 0.319990531517859, 0.336672354484604, 0.344080925114479,
            0.36443477453815, 0.382388557703079, 0.400636806304897, 0.426143102758724,
            0.44799026894166, 0.481968105228216, 0.504784834446251, 0.538942623232398,
            0.575022994994076, 0.609984410794454, 0.650585408143829, 0.692431368285185,
            0.738714094048113, 0.785410375676983, 0.836643244154216, 0.884059664335974,
            0.934925520042186, 0.993493131906963, 1.0535897692652, 1.11490958617965,
            1.1703743967658, 1.23989993160107, 1.30176000742222, 1.3640159269066,
            1.43403197363512, 1.51134399202885, 1.586717357878, 1.66801392174162,
            1.7515046248388, 1.83825926832575, 1.93138328593915, 2.03178048164444,
            2.13912006647686, 2.26284796619323, 2.39288947116766, 2.54310705965566,
            2.69957325717776, 2.86540516710206, 3.03565786400168, 3.22381227258829,
            3.4333980980082, 3.64681917423798, 3.87769120205086, 4.11359503386298,
            4.36518047028225, 4.62664901710117, 4.88518322032039, 5.1577323670873,
            5.42161136283208, 5.74694553707852, 5.97886981470074, 6.17591342577656,
            6.45187051639867, 6.71183248496688, 6.94723880208427, 7.16694954816191,
            7.38701577957494, 7.58464404791873, 7.7633623807195, 7.94981218541587,
            8.1197104876002, 8.28541121415837, 8.45643506631446, 8.62902301279545,
            8.80722191079295, 9.01508956355266, 9.23160689714917, 9.47619580492026,
            9.74844751144215, 10.0437874722433, 10.401105801425, 10.7993136214487,
            11.2398623758161, 11.7065595559524, 12.2207486111174, 12.7829650329663,
            13.3843350441552, 14.0222371832749, 14.6911112995202, 15.3649560800404,
            16.0502520327718, 16.750527863787, 17.4456411154136, 18.0956271026631,
            18.71952462578, 19.3011507819387, 19.8150313662875, 20.2279009264296,
            20.5675046857548, 20.7962002900639, 20.8801477634578, 20.8737091101812,
            20.7292038109048, 20.446085336338, 20.0318153246423, 19.4719067904173,
            18.8043880545397, 18.0390913478619, 17.1840784587912, 16.2656630627833,
            15.2844623049683, 14.2621044617464, 13.2263962407614, 12.1741884475437,
            11.1544882797007, 10.1565577137351, 9.19318991164556, 8.27614381127515,
            7.41444325598176, 6.62000378149537, 5.87173612185043, 5.18839206307486,
            4.57532248037173, 4.02135705634676, 3.52338052214045, 3.07835076879487,
            2.67730124870956, 2.33248966546052, 2.02375688459787, 1.75621002114641,
            1.52401368934408, 1.32042893846028, 1.14473065040176, 0.99683734653015,
            0.866196170871332, 0.754258714452648, 0.659469850520379, 0.57615765928304,
            0.508044027356696, 0.448780457565956, 0.39778286480109, 0.351748760716216,
            0.313424567368536, 0.280026898691919, 0.255063593081301, 0.229805450306446,
            0.210904932096582, 0.19391000840999, 0.178356016174793, 0.165434380758817,
            0.152607835369542, 0.145995846517885, 0.134963084513033, 0.125989306616539,
            0.121369380197926, 0.116810548027507, 0.10868011830369, 0.104994943249188,
            0.104981265464214, 0.100542534782555, 0.0941209637391518, 0.0952949594279278,
            0.0925514260202871, 0.0851715654263325, 0.0870211140331434, 0.0845781643521838,
            0.0807882424769357, 0.080594577032616, 0.0782329314681195, 0.079551348897053,
            0.0751114052617696, 0.0748514572031098, 0.0745500282073611, 0.0742203539597208,
            0.0735130969433331, 0.0745249011535835, 0.0727638989569787, 0.0701192045351372,
            0.0677897319412014, 0.0687429042353161, 0.0702279719588761, 0.0702772751974473,
            0.0681486421535078, 0.0679484412117586, 0.0692084265022369, 0.0706636953513223,
            0.0697804920315984, 0.069429195122663, 0.0675917428370638, 0.0675378580019358,
            0.0705590166752059, 0.0710616582452708, 0.0725203643795314, 0.0738448178912271,
            0.0720913405754762, 0.0664939556765743, 0.0669782976798368, 0.0665570726453908,
            0.066776897755716, 0.0708458758004329, 0.0711567308963945, 0.0701483938387363,
            0.0695442977884692, 0.0697971183817256, 0.0730414814628104, 0.0693573392190809,
            0.0716057306862651, 0.0708129833109509, 0.0705568908030742, 0.0692756405868014,
            0.0701266396296935, 0.0712082885423584, 0.0701780959287731, 0.0704467235617976,
            0.0687806184642255, 0.0721915566857493, 0.0729956605088166, 0.0710365468678496,
            0.0725330844106596, 0.0740484221635474, 0.0731948977880138, 0.0724108022723631,
            0.0752384990476642, 0.0742218129184879, 0.0760702177488561, 0.073096633441643,
            0.0702448953543546, 0.0705146956420793, 0.0670926265146945, 0.0752381453232321,
            0.0761038088181798, 0.0538169503051652, 0.0714141671484024, 0.0679210774593162,
            0.0719884225876718, 0.073846310877066, 0.073573522488718, 0.073047011582599,
            0.0748098686801961, 0.0709003570073869, 0.0709483961311168, 0.0728047805248711,
            0.0743820446339945, 0.0720358900434796, 0.0740214696987104, 0.0743586583854377,
            0.0731453446093508, 0.0747333851862444, 0.0767488226477286, 0.0760620706843615,
            0.076297119193905, 0.07540972773581, 0.0740026795089975, 0.0737629265550167,
            0.0725009625922861, 0.0713112670817042, 0.0732666619825619, 0.0751816258280258,
            0.0733917053632137, 0.0739453776162644, 0.0760841283556885, 0.0749796064456066,
            0.07399489342998, 0.0736092865764536, 0.0746761676814503, 0.0752811616128113,
            0.073839926846935, 0.0768527662851759, 0.0740399026055851, 0.0740385814837696,
            0.0721957973239491, 0.0738006201169096, 0.0745178529441688, 0.0776815198692584,
            0.0728973179835356, 0.076978696533499, 0.0761452596098405, 0.0790603676765337,
            0.0757329788936757, 0.0737708932843442, 0.0748104904466882, 0.073570060697292,
            0.078437586617706, 0.0744002303145531, 0.0770215625517396, 0.0754411595131088,
            0.0777036284051173, 0.0773341869198259, 0.0769153723488578, 0.0801025180258879,
            0.0761855904496233, 0.0762769414643418, 0.0772055287400303, 0.0742344281606079,
            0.0760179099811906, 0.0763023965398594, 0.0756967987178537, 0.0763539271407566,
            0.0759734401389352, 0.0768110837467824, 0.0776344776249007, 0.0746118606917518,
            0.0756624596759302, 0.0783344060271484, 0.076740101233125, 0.0766822505913171,
            0.07581948824646, 0.0762364340215314, 0.0769011745033368, 0.0780455793576827,
            0.0769806614266414, 0.0787393696859591, 0.0776718940043978, 0.0781925591965464,
            0.07688842620858, 0.0793203913482567, 0.079628182800261, 0.0800698674415226,
            0.0791438680870017, 0.0779810748876977, 0.0790071714248539, 0.0777902059956466,
            0.0788350373009458, 0.0801176599817268, 0.080696738536259, 0.0780084936767798,
            0.0804415732280948, 0.0816476262692636, 0.0819262220513703, 0.0821714171245377,
            0.0832819978316661, 0.0793509192580708, 0.0811063926551196, 0.0839561726816691,
            0.0825501814741808, 0.0829671582520149, 0.0805125430704446, 0.083769307386724,
            0.0829715577133811, 0.0861194602943802, 0.0841533210467735, 0.0841265033752106,
            0.083823602748045, 0.0801374196753354, 0.0860828185942839, 0.0852959585167433,
            0.0856848188790419, 0.0829519495238987, 0.0844150878510904, 0.0877600450643033,
            0.0864811553977387, 0.0843965454962638, 0.0858505643265946, 0.083689184473893,
            0.0866509805026391, 0.0852732283118658, 0.0887706516216118, 0.0852827301722685,
            0.0883135603776568, 0.0902947729252544, 0.0861770130217594, 0.0860050157646359,
            0.0862568028527667, 0.0857474619860489, 0.0867791674553699, 0.0920920483668051,
            0.0901118765277514, 0.0883754915852017, 0.0880246029689218, 0.0869230159050905,
            0.0916610814309959, 0.0900776888560092, 0.0911411148974432, 0.0893552225586153,
            0.0850862331704111, 0.0885739965484008, 0.093186465446435, 0.093141501532846,
            0.093258550538363, 0.0891107035987359, 0.0885167219294394, 0.0885369669778639,
            0.095468133501207, 0.0900297528881021, 0.0918513950604133, 0.0906185079346463,
            0.0909682182525569, 0.0904789492364427, 0.0921629368600038, 0.0890384357650427,
            0.0905044135308273, 0.0916985775718226, 0.0935749604451355, 0.0938559098759385,
            0.0903076733068976, 0.0922806560989939, 0.08940408152398, 0.0896986497222189,
            0.0931204493760142, 0.0926046646524116, 0.0931816154980437, 0.0908256583058145,
            0.0902113536253058, 0.089409144452023, 0.092201813593758, 0.0957101582717902,
            0.0936964641669795, 0.0925568080377561, 0.087350044243661, 0.0940748908208817,
            0.0892510508585249, 0.0908248958517308, 0.090012250544043, 0.0945861817017572,
            0.0941717102533538, 0.091716171065907, 0.0921665889020052, 0.0908003173226252,
            0.09341110558322, 0.0907140606523989, 0.0995436037781367, 0.0912921568432408,
            0.0891344475580105, 0.0932830099370158, 0.0924202577855228, 0.0930078198530811,
            0.0928310367099648, 0.0912166710297693, 0.0964460958675525, 0.0973474632879178,
            0.0928286021294389, 0.0986167204119833, 0.097094681568429, 0.0969580289805068,
            0.0972071546448573, 0.0944394708783035, 0.0950922999452394, 0.0921988483299676,
            0.102088477347167, 0.094532438766317, 0.099797976867533, 0.0955709979436164,
            0.0974956540152108, 0.100244436589352, 0.0944193005851438, 0.100281545232025,
            0.0992811341976802, 0.0998274789520982, 0.100237411931686, 0.0976403435497824,
            0.0999374821337102, 0.103146020171368, 0.0979584211364198, 0.102316931134046,
            0.0995478095948981, 0.103680111240479, 0.0973981503468869, 0.0987991125614372,
            0.101931011609446, 0.098507922376986, 0.105627590430217, 0.102778332343415,
            0.0996030948928082, 0.103251888117971, 0.106448768547514, 0.107750702675659,
            0.106229176743953, 0.106108564539957, 0.103737477532299, 0.10248700447477,
            0.103528742208415, 0.100803261106872, 0.0985153136192199, 0.106040134333778,
            0.106442322659665, 0.104719174261812, 0.100904057049171, 0.104202922447766,
            0.105761746739546, 0.107181463340168, 0.106079347480662, 0.100449391625919,
            0.105234116555601, 0.0976290259391026, 0.106326990287594, 0.102882438101524,
            0.10182807906557, 0.102925685205779, 0.105709942444929, 0.102454041150422,
            0.100817110174041, 0.100083137687994, 0.103143799441468, 0.0990847709897481,
            0.102295295445391, 0.101765779917348, 0.0989138472982459, 0.0981714911840006,
            0.0953296762487769, 0.101234651968636, 0.101178578143544, 0.096850575885646,
            0.0895508240414158, 0.0914023247985244, 0.0860454138139021, 0.0856574211257669,
            0.0889976143168584, 0.0859060809491007, 0.0869438383227372, 0.084221269695378,
            0.0892148306946362, 0.0860461138053665, 0.0822166777319512, 0.0782310755066364,
            0.0778502349443811, 0.0709104704011113, 0.0730195848143518, 0.0729070021387024,
            0.071329676434529, 0.0744440095765694, 0.0643360863835539, 0.0601465849160414,
            0.0548610043718216, 0.0558582171390341, 0.0588437677351546, 0.0591415222580156,
            0.0529328044197892, 0.0458323414771936, 0.0373653326407358, 0.0344417033599457,
            0.0347360459615874, 0.0268541867873628, 0.0398283259625271, 0.0126360326032532,
            0.0191034911574048, 0.0216301660519642, 0.0226479465670781, 0.0127108518818349,
            0.023085653619657, 0.0166651042548349, 0.0267615484673169, 0.0105244504804161,
            0.0211144243676797, 0.0332081968408199, 0.0362965827957153, 0.0420770999272724,
            0.0308857170838052, 0.0377008674347997, 0.0262186752089766, 0.025895046728069,
            0.0437005964113326, 0.0497660457819943, 0.0468702191583092, 0.0503312752657907,
            0.0430438875260187, 0.050655690508564, 0.049073508331738, 0.0680926086437316,
            0.0631831523827352, 0.069495237544887, 0.0543314833955046, 0.058804701340456,
            0.0966414501409257, 0.0929586554706131, 0.108551366523857, 0.0984311320899347,
            0.0659330530638036, 0.0909260934157032, 0.0946405259488364, 0.115281932582947,
            0.116563905826863, 0.117332411988123, 0.0861129350859748, 0.115615055915196,
            0.11121061980035]

    αᵣ = CubicSpline(tαᵣ, tλ)(λ) # note the weird order (y,x)
    αᵢ = CubicSpline(tαᵢ, tλ)(λ)

    ε₀ = 8.8541878128e-12
    nm3 = 1e27
    # factor 3 as we want the alpha_zz component, not the trace
    return 3 * nm3 / (4π * ε₀) * (αᵣ + 1im * αᵢ)

end



"""
    alpha_embed(α::Complex{T}, medium::T) where T <: Real

Effective point polarisability in medium, rescaled by local field correction
- `α`: bare polarisabilty
- `medium`: refractive index of embedding medium

Default values mimic the main resonance of Rhodamine 700

# Examples

```jldoctest
julia> round(alpha_embed(alpha_lorentzmolecule(632.8)), digits=5)
0.12976 + 0.0109im
```

"""
function alpha_embed(α, medium=1.33)
    ε_m = medium^2
    L = (ε_m + 2) / 3
    1 / ε_m * L^2 * α
end


"""
    alpha_scale(alpha, sizes::SVector{3})

Principal polarisability components of a particle, rescaled along each principal axis
- `α`: scalar polarisabilty
- `sizes`: 3-vector to scale along each principal axis

"""
function alpha_scale(alpha, sizes)
    alpha .* (sizes / sum(sizes))
end


"""
alpha_cm(ε, ε_m, Size)

Clausius-Mossotti polarisability
- `ε`: complex dielectric function
- `ε_m`: dielectric function of surrounding medium
- `Size`: particle size, assumed to be spherical
"""
function alpha_cm(ε, ε_m, Size)
    return Size[1]^3 * (ε - ε_m) / (ε + 2 * ε_m)
end


"""
alpha_particles(Epsilon, Sizes, ε_m, λ; prescription="kuwata")

Principal polarisability components of N particles
- `λ`: wavelength
- `ε`: complex dielectric function
- `ε_m`: dielectric function of surrounding medium
- `Sizes`: Vector of 3-SVectors of particle sizes

# Examples

```
julia> alpha_particles(500, -10+1im, 1.33^3, [SVector(30, 30, 50) for i in 1:4])
4-element Vector{SVector{3, ComplexF64}}:
 [83399.81975161123 + 64172.28157743772im, 83399.81975161123 + 64172.28157743772im, -86034.64340475321 + 79773.72029581512im]
 [83399.81975161123 + 64172.28157743772im, 83399.81975161123 + 64172.28157743772im, -86034.64340475321 + 79773.72029581512im]
 [83399.81975161123 + 64172.28157743772im, 83399.81975161123 + 64172.28157743772im, -86034.64340475321 + 79773.72029581512im]
 [83399.81975161123 + 64172.28157743772im, 83399.81975161123 + 64172.28157743772im, -86034.64340475321 + 79773.72029581512im]
```

"""
function alpha_particles(Epsilon, Sizes, ε_m, λ; prescription="kuwata")

    if prescription == "kuwata"
        return (map((e, s) -> alpha_kuwata(λ, e, ε_m, s), Epsilon, Sizes))
    elseif prescription == "majic"
        return (map((e, s) -> alpha_majic(λ, e, ε_m, s), Epsilon, Sizes))
    elseif prescription == "mie"
        return (map((e, s) -> alpha_mie(λ, e, ε_m, s), Epsilon, Sizes))
    else
        @warn "unknown prescription $prescription"
        return (map((e, s) -> alpha_kuwata(λ, e, ε_m, s), Epsilon, Sizes))
    end
end

"""
ALPHA_MIE exact polarisability from Mie theory

 Given a particle radius, returns the
 wavelength-dependent polarisability

 PARAMETERS:
 - wavelength vector of length Nl
 - epsilon complex vector of length Nl
 - medium refractive index of surrounding medium
 - a radius

 RETURNS: vector of length Nl

 DEPENDS: mini_GDAB [private]

 FAMILY: low_level, polarizability

"""
function alpha_mie(λ, ε, ε_m, Size)

    n_medium = sqrt(ε_m)
    s = sqrt(ε) / n_medium
    k = n_medium * 2π / λ
    x = k * Size[1]
    conversion = 2 / 3 * 1im * k^3
    Γ, Δ, A, B = mie_susceptibility(x, s, 1)

    A1 = Δ[1] / conversion
    return SVector(A1, A1, A1)
end

"""
alpha_majic returns a 3NrxNl matrix of principal polarizability components for a spheroid

 Principal polarizability components describing Nr particles of spheroidal shape
 with defined sizes, and using a wavelength-dependent permittivity of length Nl

 PARAMETERS:
 - wavelength
 - epsilon
 - medium
 - sizes

 RETURNS: 3NrxNl matrix of principal polarizability components
 describing spheroids

 FAMILY: user_level, polarizability
"""
function alpha_majic(λ, ε, ε_m, Size)

    εᵣ = (ε / ε_m)
    k = 2π / λ * √ε_m

    a, b, c = Size
    V = 4 / 3 * π * a * b * c

    Lx(e) = -1 / (2 * e^2) * ((1 - e^2) / e * atanh(e) - 1)
    Lz(e) = (1 - e^2) / e^2 * (atanh(e) / e - 1)

    AlphaS(L) = V / 4 / π * (εᵣ - 1) / (1 + (εᵣ - 1) * L)

    if (c ≈ a) & (b ≈ a) # sphere

        L1 = 1 / 3
        e = 0
        Omega1 = 1 / 5 * (εᵣ - 2) / (1 + (εᵣ - 1) * L1)
        AlphaS₁ = AlphaS(L1)
        A1 = AlphaS₁ / (1 - Omega1 * k^2 * c^2 - 1im * 2 / 3 * k^3 * AlphaS₁)
        return (SVector(A1, A1, A1))

    elseif (a ≈ b) # spheroid along z, i.e. standard orientation

        e = sqrt(c^2 - a^2) / c
        L1 = Lx(e)
        L2 = Lz(e)
        Omega1 = 1 / 5 * (εᵣ - 2 + 3 * e^2) / (1 + (εᵣ - 1) * L1) - 12 / 25 * e^2
        Omega2 = 1 / 5 * (εᵣ - 2 - εᵣ * e^2) / (1 + (εᵣ - 1) * L2) + 9 / 25 * e^2
        AlphaS₁ = AlphaS(L1)
        AlphaS₂ = AlphaS(L2)
        A1 = AlphaS₁ / (1 - Omega1 * k^2 * c^2 - 1im * 2 / 3 * k^3 * AlphaS₁)
        A2 = AlphaS₂ / (1 - Omega2 * k^2 * c^2 - 1im * 2 / 3 * k^3 * AlphaS₂)
        return (SVector(A1, A1, A2))

    elseif (b ≈ c) # spheroid along x
        # c -> a 
        # a -> b 
        e = sqrt(a^2 - b^2) / a
        # unchanged below #
        L1 = Lx(e)
        L2 = Lz(e)
        Omega1 = 1 / 5 * (εᵣ - 2 + 3 * e^2) / (1 + (εᵣ - 1) * L1) - 12 / 25 * e^2
        Omega2 = 1 / 5 * (εᵣ - 2 - εᵣ * e^2) / (1 + (εᵣ - 1) * L2) + 9 / 25 * e^2
        AlphaS₁ = AlphaS(L1)
        AlphaS₂ = AlphaS(L2)
        # /unchanged #

        A1 = AlphaS₁ / (1 - Omega1 * k^2 * a^2 - 1im * 2 / 3 * k^3 * AlphaS₁)
        A2 = AlphaS₂ / (1 - Omega2 * k^2 * a^2 - 1im * 2 / 3 * k^3 * AlphaS₂)
        return (SVector(A2, A1, A1)) # swap z and x

    elseif (a ≈ c) # spheroid along y
        # c -> b 
        # a -> a 
        e = sqrt(b^2 - a^2) / b
        # unchanged below #
        L1 = Lx(e)
        L2 = Lz(e)
        Omega1 = 1 / 5 * (εᵣ - 2 + 3 * e^2) / (1 + (εᵣ - 1) * L1) - 12 / 25 * e^2
        Omega2 = 1 / 5 * (εᵣ - 2 - εᵣ * e^2) / (1 + (εᵣ - 1) * L2) + 9 / 25 * e^2
        AlphaS₁ = AlphaS(L1)
        AlphaS₂ = AlphaS(L2)
        # /unchanged #

        A1 = AlphaS₁ / (1 - Omega1 * k^2 * a^2 - 1im * 2 / 3 * k^3 * AlphaS₁)
        A2 = AlphaS₂ / (1 - Omega2 * k^2 * b^2 - 1im * 2 / 3 * k^3 * AlphaS₂)
        return (SVector(A1, A2, A1))# swap z and y

    else # general ellipsoid, not implemented
        @warn "not implemented"
    end

end

"""
    alpha_kuwata(λ, ε, ε_m, Size)

Principal polarisability components of a spheroidal particle
- `λ`: wavelength
- `ε`: complex dielectric function
- `ε_m`: dielectric function of surrounding medium
- `Size`: SVector with 3 semi-axes of the spheroid

# Examples

```
julia> alpha_kuwata(500, -10+1im, 1.33^2, SVector(30, 30, 50))
3-element SVector{3, ComplexF64} with indices SOneTo(3):
  77076.04648078184 + 26235.664281642235im
  77076.04648078184 + 26235.664281642235im
 -98187.15974124733 + 205835.30299929058im
```

"""
function alpha_kuwata(λ, ε, ε_m, Size)

    V = 4π / 3 * prod(Size)
    x = @. 2π / λ * Size
    χ = depolarisation_ellipsoid(Size...)

    A = @. -0.4865 * χ - 1.046 * χ^2 + 0.8481 * χ^3
    B = @. 0.01909 * χ + 0.19999 * χ^2 + 0.6077 * χ^3

    denom = @. (χ + ε_m / (ε - ε_m)) + A * ε_m * x^2 + B * ε_m^2 * x^4 -
               1im / 3 * 4 * π^2 * ε_m^(3 / 2) * V / λ^3

    return ((V / (4π)) ./ denom)
end

"""
  depolarisation_ellipsoid(a, b, c)

Depolarisation factor of an ellipsoid
- `a`: semi-axis along x 
- `b`: semi-axis along y
- `c`: semi-axis along z

# Examples

```jldoctest
julia> round.(depolarisation_ellipsoid(1, 1, 1.5), digits=5)
3-element SVector{3, Float64} with indices SOneTo(3):
 0.38351
 0.38351
 0.23298
```

"""
function depolarisation_ellipsoid(a, b, c)
    if (c ≈ a) & (b ≈ a) # sphere
        Lx = 1 / 3.0
        Ly = Lx
        Lz = Lx
    elseif (a ≈ b) # spheroid along z
        Lx, Ly, Lz = depolarisation_spheroid(a, c)
    elseif (b ≈ c) # spheroid along x
        Lz, Ly, Lx = depolarisation_spheroid(b, a) # swap z and x
    elseif (a ≈ c) # spheroid along y
        Lx, Lz, Ly = depolarisation_spheroid(a, b)  # swap z and y
    else # general case (no closed form)
        V = a * b * c
        Lx = QuadGK.quadgk(q -> 1.0 / ((1.0 + q) * sqrt((q + 1.0) * (q + (b / a)^2) * (q + (c / a)^2))), 0.0, Inf)[1] * V / 2.0 / a^3
        Ly = QuadGK.quadgk(q -> 1.0 / ((1.0 + q) * sqrt((q + 1.0) * (q + (a / b)^2) * (q + (c / b)^2))), 0.0, Inf)[1] * V / 2.0 / b^3
        Lz = QuadGK.quadgk(q -> 1.0 / ((1.0 + q) * sqrt((q + 1.0) * (q + (a / c)^2) * (q + (b / c)^2))), 0.0, Inf)[1] * V / 2.0 / c^3
    end

    return SVector(Lx, Ly, Lz)
end

"""
    depolarisation_spheroid(a, c)

Depolarisation factor of a spheroid
- `a`: semi-axis along x and y
- `c`: semi-axis along z

# Examples

```jldoctest
julia> round.(depolarisation_spheroid(1, 1.5), digits=5)
3-element SVector{3, Float64} with indices SOneTo(3):
 0.38351
 0.38351
 0.23298
```

"""
function depolarisation_spheroid(a, c)
    if (c == a)# sphere
        Lz = 1 / 3
    end

    if (c > a) # prolate
        e = sqrt(1 - (a / c)^2)
        Lz = (1 - e^2) / e^3 * (-e + atanh(e))
    end

    if (c < a) # oblate
        e = sqrt(1 - (c / a)^2)
        Lz = 1 / e^2 * (1 - sqrt(1 - e^2) / e * asin(e))
    end

    Lx = (1 - Lz) / 2

    return (SVector(Lx, Lx, Lz))
end

